name: Main

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# https://devblogs.microsoft.com/cppblog/vcpkg-integration-with-the-github-dependency-graph/
permissions:
  contents: write

env:
  # https://devblogs.microsoft.com/cppblog/vcpkg-integration-with-the-github-dependency-graph/
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  VCPKG_ROOT: "C:/my-vcpkg"
  VCPKG_DEFAULT_BINARY_CACHE: "C:/vcpkg-binary-cache"
  VCPKG_FEATURE_FLAGS: dependencygraph
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Get project vcpkg baseline
        shell: pwsh
        run: |
          $baseline = (Get-Content -Path vcpkg.json | ConvertFrom-Json).'builtin-baseline'
          echo "VCPKG_BASELINE=$baseline" >> $env:GITHUB_ENV

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          key: vcpkg-${{ hashFiles('vcpkg.json') }}
          path: |
            ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Setup vcpkg
        run: |
          New-Item -ItemType Directory -Path ${{env.VCPKG_ROOT}}
          Set-Location -Path ${{env.VCPKG_ROOT}}
          git init
          git remote add --no-tags origin https://github.com/microsoft/vcpkg.git
          git fetch --depth 1 --no-write-fetch-head origin ${{env.VCPKG_BASELINE}}
          git branch master ${{env.VCPKG_BASELINE}}
          git checkout
          ./bootstrap-vcpkg.bat
          New-Item -ItemType Directory -Path ${{env.VCPKG_DEFAULT_BINARY_CACHE}} -Force

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} --toolchain ${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Pack
        run: |
          cd ${{github.workspace}}/build
          cpack --config CPackConfig.cmake -C ${{env.BUILD_TYPE}}

      - name: Release nightly build
        uses: andelf/nightly-release@main
        # TODO only run on master branch AND NOT ON PULL REQUESTS
        # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          name: 'Nightly Release $$'
          body: 'This is an automated nightly build. Download the *-dll.zip files if you need Observer modules. Download the *-pdb.zip files if you need debug symbols.'
          tag_name: nightly
          prerelease: false
          files: |
            ./build/*.zip
